name: Production workflow

on:
  push:
    branches:
      - master

jobs:
  build-ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ 3.10.4 ]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Initialize Database
      run: |
        ./init-db.sh
      env:
        DATABASE_URL: "postgresql://postgres:postgres@127.0.0.1/postgres"

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.4'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Run Tests
      run: |
        make test
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Run Lint
      run: |
        make lint

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag registry.heroku.com/quizhero/web
